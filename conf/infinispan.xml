<infinispan
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="urn:infinispan:config:13.0 https://infinispan.org/schemas/infinispan-config-13.0.xsd
                            urn:infinispan:server:13.0 https://infinispan.org/schemas/infinispan-server-13.0.xsd"
        xmlns="urn:infinispan:config:13.0"
        xmlns:server="urn:infinispan:server:13.0">
    <jgroups>
        <stack name="jdbc-ping-tcp" extends="tcp">
            <JDBC_PING  connection_driver="org.postgresql.Driver"
                        connection_url="jdbc:postgresql://${env.GID_DB_HOST}:${env.GID_DB_PORT}/${env.GID_DB_NAME}"
                        connection_username="${env.GID_DB_USERNAME}"
                        connection_password="${env.GID_DB_PASSWORD}"
                        initialize_sql="CREATE TABLE IF NOT EXISTS JGROUPSPING (own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name));"
                        info_writer_sleep_time="500"
                        remove_all_data_on_view_change="true"
                        stack.combine="REPLACE"
                        stack.position="MPING" />
            <MERGE3
                    min_interval="10000"
                    max_interval="30000"
            />
            <FD_ALL timeout="40000" interval="5000"/>
            <VERIFY_SUSPECT timeout="3000"/>
            <pbcast.NAKACK2 use_mcast_xmit="false"/>
            <pbcast.STABLE desired_avg_gossip="50000" max_bytes="4M"/>
            <pbcast.GMS print_local_addr="true" join_timeout="3000"/>
            <UFC max_credits="2M" min_threshold="0.4"/>
            <MFC max_credits="2M" min_threshold="0.4"/>
            <FRAG2 frag_size="60K"/>
        </stack>
    </jgroups>

    <cache-container name="keycloak">
        <transport cluster="${infinispan.cluster.name:ISPN}"
                   stack="${infinispan.cluster.stack:jdbc-ping-tcp}"
                   node-name="${infinispan.node.name:}"
                   lock-timeout="60000"
        />

        <serialization marshaller="org.infinispan.jboss.marshalling.commons.GenericJBossMarshaller">
            <allow-list>
                <class>org.*</class>
                <regex>.*</regex>
            </allow-list>
        </serialization>

        <distributed-cache name="sessions" owners="2">
            <encoding media-type="application/x-java-object"/>
            <transaction mode="NON_XA"/>
            <expiration lifespan="-1"/>
        </distributed-cache>

    </cache-container>

    <server xmlns="urn:infinispan:server:13.0">
        <interfaces>
            <interface name="public">
                <inet-address value="${infinispan.bind.address:0.0.0.0}"/>
            </interface>
        </interfaces>

        <socket-bindings default-interface="public" port-offset="${infinispan.socket.binding.port-offset:0}">
            <socket-binding name="default" port="${infinispan.bind.port:11222}"/>
            <!--<socket-binding name="memcached" port="${infinispan.bind.port:11221}"/>-->
        </socket-bindings>

        <security>
            <credential-stores>
                <credential-store name="credentials" path="credentials.pfx">
                    <clear-text-credential clear-text="secret"/>
                </credential-store>
            </credential-stores>
            <security-realms>
                <security-realm name="default">
                    <!-- Uncomment to enable TLS on the realm -->
                    <!-- server-identities>
                       <ssl>
                          <keystore path="application.keystore"
                                    password="password" alias="server"
                                    generate-self-signed-certificate-host="localhost"/>
                       </ssl>
                    </server-identities-->
                    <properties-realm groups-attribute="Roles">
                        <user-properties path="users.properties"/>
                        <group-properties path="groups.properties"/>
                    </properties-realm>
                </security-realm>
            </security-realms>
        </security>

        <endpoints socket-binding="default" security-realm="default" />
    </server>
</infinispan>
